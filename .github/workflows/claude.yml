name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Recce Repository
        uses: actions/checkout@v4
        with:
          repository: 'DataRecce/recce'
          path: 'recce-repo'
          ref: 'feature/drc-1893-implement-the-mcp-server-in-recce'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements.txt') }}-recce-drc-1893
          restore-keys: |
            pip-${{ hashFiles('requirements.txt') }}-
            pip-

      - name: Cache dbt packages
        uses: actions/cache@v4
        with:
          path: |
            dbt_packages/
            ~/.dbt/
          key: dbt-packages-${{ hashFiles('packages.yml') }}
          restore-keys: |
            dbt-packages-

      - name: Install Recce from source
        run: |
          cd recce-repo
          pip install -e .

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Install dbt packages
        run: |
          dbt deps

      - name: Cache base target artifacts
        if: github.event.pull_request != null
        id: cache-base-target
        uses: actions/cache@v4
        with:
          path: target-base/
          key: dbt-base-${{ github.event.pull_request.base.ref }}-${{ github.event.pull_request.base.sha }}-${{ hashFiles('models/**/*.sql', 'seeds/**/*.csv', 'dbt_project.yml') }}
          restore-keys: |
            dbt-base-${{ github.event.pull_request.base.ref }}-${{ github.event.pull_request.base.sha }}-
            dbt-base-${{ github.event.pull_request.base.ref }}-

      - name: Prepare dbt Base environment
        if: github.event.pull_request != null && steps.cache-base-target.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          # Checkout base branch
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git checkout origin/${{ github.event.pull_request.base.ref }}
          
          # Generate base artifacts with error handling
          dbt seed --target-path target-base || echo "Warning: dbt seed failed for base environment"
          dbt run --target-path target-base || echo "Warning: dbt run failed for base environment"
          dbt docs generate --target-path target-base || echo "Warning: dbt docs generate failed for base environment"
          
          # Return to PR branch
          git checkout ${{ github.event.pull_request.head.sha }}

      - name: Prepare dbt Current environment
        if: github.event.pull_request != null
        continue-on-error: true
        run: |
          # Generate current artifacts with error handling
          dbt seed || echo "Warning: dbt seed failed for current environment"
          dbt run || echo "Warning: dbt run failed for current environment"
          dbt docs generate || echo "Warning: dbt docs generate failed for current environment"

      - name: Run Claude Code with Recce MCP
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Specify MCP server configuration file for Recce tools
          # Available tools: get_lineage_diff, row_count_diff, query, query_diff, profile_diff
          # Note: Recce tools are only available when running in PR context with artifacts
          mcp_server_config_path: '.github/mcp_config.json'

